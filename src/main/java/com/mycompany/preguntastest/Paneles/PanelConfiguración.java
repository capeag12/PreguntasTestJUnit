/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.preguntastest.Paneles;

import com.mycompany.preguntastest.ExcepcionNoPudoConectarse;
import com.mycompany.preguntastest.Pregunta;
import com.mycompany.preguntastest.VentanaPrincipal;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Dam
 */
public class PanelConfiguraci칩n extends javax.swing.JPanel {
    private VentanaPrincipal ventanaPadre;
    
    
    private DefaultListModel<String> modelo;
    /**
     * Creates new form PanelCrearPregunta
     */
    public PanelConfiguraci칩n(VentanaPrincipal p) {
        initComponents();
        this.ventanaPadre=p;
        
        
        
        rellenarLista();
        
    }
    
    private void rellenarLista(){
        
        try {
            ventanaPadre.getServicio().recuperarPreguntas();
        } catch (SQLException | ExcepcionNoPudoConectarse ex) {
            JOptionPane.showMessageDialog(ventanaPadre, "No se han podido recuperar los datos remotos");
            
        }
        ArrayList<Pregunta> listaPreguntas = ventanaPadre.getServicio().getListaPreguntas();
        modelo = new DefaultListModel<>();
        
        for (int i = 0; i < listaPreguntas.size(); i++) {
            
            modelo.addElement(listaPreguntas.get(i).toString());
        }
        
        this.listPreguntas.setModel(modelo);
        System.out.println(this.ventanaPadre.getServicio().getListaPreguntas().toString());
        System.out.println("Lista preguntas:"+listaPreguntas.toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listPreguntas = new javax.swing.JList<>();
        rbtRes1 = new javax.swing.JRadioButton();
        rbtRes2 = new javax.swing.JRadioButton();
        rbtRes3 = new javax.swing.JRadioButton();
        rbtRes4 = new javax.swing.JRadioButton();
        txtRes1 = new javax.swing.JTextField();
        txtRes2 = new javax.swing.JTextField();
        txtRes3 = new javax.swing.JTextField();
        txtRes4 = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnInicio = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtPregunta = new javax.swing.JTextArea();
        btnEditar = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("A침adir pregunta:");

        listPreguntas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listPreguntas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(listPreguntas);

        buttonGroup1.add(rbtRes1);
        rbtRes1.setSelected(true);

        buttonGroup1.add(rbtRes2);

        buttonGroup1.add(rbtRes3);

        buttonGroup1.add(rbtRes4);

        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnAdd.setText("A침adir");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnInicio.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnInicio.setText("Volver a inicio");
        btnInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInicioActionPerformed(evt);
            }
        });

        txtPregunta.setColumns(20);
        txtPregunta.setRows(5);
        jScrollPane2.setViewportView(txtPregunta);

        btnEditar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(rbtRes1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtRes1))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(rbtRes2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtRes2))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(rbtRes3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtRes3))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(rbtRes4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtRes4))
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnEditar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEliminar)))))
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbtRes1)
                            .addComponent(txtRes1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbtRes2)
                            .addComponent(txtRes2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbtRes3)
                            .addComponent(txtRes3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbtRes4)
                            .addComponent(txtRes4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInicioActionPerformed
        this.ventanaPadre.cambiarPanel(new PanelInicio(ventanaPadre));
    }//GEN-LAST:event_btnInicioActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        boolean camposVacios = comprobarCamposVacios();
        if (camposVacios==false) {
            JOptionPane.showMessageDialog(ventanaPadre, "No pueden existir campos vacios");
        } else if(camposVacios==true){
             ArrayList<String> listaRespuestas = new ArrayList<>();
            listaRespuestas.add(txtRes1.getText());
            listaRespuestas.add(txtRes2.getText());
            listaRespuestas.add(txtRes3.getText());
            listaRespuestas.add(txtRes4.getText());
        
            Pregunta p = new Pregunta(txtPregunta.getText(), listaRespuestas,obtenerPulsado() );
        
            boolean add = this.ventanaPadre.getBBDD().insertarPregunta(p);
        
            if (add==true) {
                JOptionPane.showMessageDialog(ventanaPadre, "Se a침adio correctamente");
                this.ventanaPadre.getServicio().addPregunta(p);
                this.modelo.addElement(p.toString());
            } else{
                JOptionPane.showMessageDialog(ventanaPadre, "No se a침adio a la BBDD pero se a침adio localmente");
                this.ventanaPadre.getServicio().addPregunta(p);
                this.modelo.addElement(p.toString());
            }
            vaciarTodosLosCampos();
            
        }
        System.out.println(this.ventanaPadre.getServicio().getListaPreguntas().toString());
        
       
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        System.out.println("Eliminado"+this.ventanaPadre.getServicio().getListaPreguntas().toString());
        if (listPreguntas.getSelectedIndex()==-1) {
            JOptionPane.showMessageDialog(ventanaPadre, "No existe ninguna pregunta seleccionada");
        } else{
            ArrayList<Pregunta> listaPreguntas = ventanaPadre.getServicio().getListaPreguntas();
            boolean eliminado = this.ventanaPadre.getBBDD().eliminarPregunta(listaPreguntas.get(listPreguntas.getSelectedIndex()).getID());
            System.out.println("Booleano eliminado:"+eliminado);
            if (eliminado==true) {
                JOptionPane.showMessageDialog(ventanaPadre, "Se elimin칩 correctamente");
                this.ventanaPadre.getServicio().eliminarPreguntaIndice(listPreguntas.getSelectedIndex());
                modelo.remove(listPreguntas.getSelectedIndex());
                
                
            } else {
                JOptionPane.showMessageDialog(ventanaPadre, "No se pudo eliminar de la BBDD pero se elimino localmente");
                this.ventanaPadre.getServicio().eliminarPreguntaIndice(listPreguntas.getSelectedIndex());
                modelo.remove(listPreguntas.getSelectedIndex());
                
            }

        }
         System.out.println("Eliminado"+this.ventanaPadre.getServicio().getListaPreguntas().toString());
        
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (listPreguntas.getSelectedIndex()!=-1) {
            Pregunta p = ventanaPadre.getServicio().obtenerPreguntaIndice(listPreguntas.getSelectedIndex());
            this.ventanaPadre.cambiarPanel(new PanelEditarPregunta(this.ventanaPadre,p,listPreguntas.getSelectedIndex()));
        } else{
            JOptionPane.showMessageDialog(ventanaPadre, "Debes seleccionar una pregunta");
        }
    }//GEN-LAST:event_btnEditarActionPerformed
    
    private void vaciarTodosLosCampos(){
        txtPregunta.setText("");
        txtRes1.setText("");
        txtRes2.setText("");
        txtRes3.setText("");
        txtRes4.setText("");
    }
    
    private boolean comprobarCamposVacios(){
        if (txtPregunta.getText().equals("") || txtRes1.getText().equals("") || txtRes2.getText().equals("") || txtRes3.getText().equals("") || txtRes4.getText().equals("")) {
            return false;
        } else 
            return true;
    }
    
    private int obtenerPulsado(){
        if (rbtRes1.isSelected()==true) {
            return 1;
        } else if(rbtRes2.isSelected()){
            return 2;
        }else if(rbtRes3.isSelected()){
            return 3;
        }else if(rbtRes4.isSelected()){
            return 4;
        }
        return 0;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnInicio;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listPreguntas;
    private javax.swing.JRadioButton rbtRes1;
    private javax.swing.JRadioButton rbtRes2;
    private javax.swing.JRadioButton rbtRes3;
    private javax.swing.JRadioButton rbtRes4;
    private javax.swing.JTextArea txtPregunta;
    private javax.swing.JTextField txtRes1;
    private javax.swing.JTextField txtRes2;
    private javax.swing.JTextField txtRes3;
    private javax.swing.JTextField txtRes4;
    // End of variables declaration//GEN-END:variables
}
